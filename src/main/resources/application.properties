# drop and create the database at startup (use update to only update the schema)
quarkus.hibernate-orm.database.generation=drop-and-create
# configure your datasource
%dev.quarkus.datasource.db-kind=postgresql
%dev.quarkus.datasource.username=postgres
%dev.quarkus.datasource.password=postgres
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/confeitariadb


#produção config
%prod.quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.username=postgres
%prod.quarkus.datasource.password=postgres
%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/confeitariadb
# configuracao do jwt
mp.jwt.verify.publickey.location=token/publicKey.pem
mp.jwt.verify.issuer=unitins-jwt
smallrye.jwt.sign.key.location=token/privateKey.pem
quarkus.smallrye-openapi.path=/openapi
# configuracao dos logs
quarkus.log.level=INFO
quarkus.log.category."br.unitins.topicos1.resource".level=DEBUG
# configuracao de log do console
quarkus.log.console.level=INFO
#quarkus.log.console.color= true
# configuracao de log em arquivos
quarkus.log.file.enable=true
quarkus.log.file.path=/tmp/quarkus/trace.log
quarkus.log.file.level=TRACE
quarkus.log.file.format=%d{dd-MM-yyyy HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
quarkus.log.file.rotation.file-suffix=.dd-MM-yyyy-HH-mm

#config graylog
quarkus.log.handler.gelf.enabled=true
quarkus.log.handler.gelf.host=localhost
quarkus.log.handler.gelf.port=12201

#docker run -i --rm -p 8080:8080 confeitaria-app